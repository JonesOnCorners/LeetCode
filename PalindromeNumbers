Problem URL
--> https://leetcode.com/problems/palindrome-number/submissions/



class Solution:
    @classmethod
    def isPalindrome(self, x: int) -> bool:
        try:
            to_list = [int(z) for z in str(x)]
            reversed_list = to_list[::-1]
            return to_list == reversed_list
        except ValueError as ve:
            return False

# test case 1
Solution.isPalindrome(x=121)

# test case 2
Solution.isPalindrome(x=-121)

# test case 3
Solution.isPalindrome(z=10)



# Other implementation which takes less memory but runs more time

class Solution:
    @classmethod
    def isPalindrome(self, x: int) -> bool:
        test_num = 0
        original_num = x
        while(x>0):
            remainder = x % 10
            test_num = (test_num * 10) + remainder
            x = x//10
        
        return test_num == original_num

# test case 1
Solution.isPalindrome(x=121)

# test case 2
Solution.isPalindrome(x=-121)

# test case 3
Solution.isPalindrome(z=10)
